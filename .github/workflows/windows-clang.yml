name: Clang on Windows

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        arch:
          - x86-64

    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install Qt (x64)
        if: ${{ matrix.arch == 'x86-64' }}
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.*'
          arch: 'win64_msvc2019_64'
          modules: 'qtmultimedia'
      
      # - name: Install Qt (arm64)
      #   if: ${{ matrix.arch == 'arm64' }}
      #   uses: jurplel/install-qt-action@v3
      #   with:
      #     version: '6.5.*'
      #     arch: 'win64_msvc2019_arm64'

      - name: Install other packages (x64)
        if: ${{ matrix.arch == 'x86-64' }}
        run: vcpkg install freetype sndfile mpg123 libopenmpt libjpeg-turbo --triplet x64-windows
      
      # - name: Install other packages (arm64)
      #   if: ${{ matrix.arch == 'arm64' }}
      #   run: vcpkg install freetype sndfile mpg123 libopenmpt libjpeg-turbo --triplet arm64-windows
      
      - name: Set up Visual Studio environment (x64)
        if: ${{ matrix.arch == 'x86-64' }}
        uses: seanmiddleditch/gha-setup-vsdevenv@v4
        with:
          arch: 'amd64'
      
      # - name: Set up Visual Studio environment (arm64)
      #   if: ${{ matrix.arch == 'arm64' }}
      #   uses: seanmiddleditch/gha-setup-vsdevenv@v4
      #   with:
      #     arch: 'arm64'

      - name: Build
        run: |
          mkdir cmake-build
          cd cmake-build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_LINKER=lld-link -DINTERFACE=QT -DWITH_QT6=ON -DCMAKE_PREFIX_PATH=$env:QT_ROOT_DIR -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DSOUND=QT ..
          ninja
      
      - name: Assemble results
        run: |
          ls
          mkdir gargoyle-staging
          cp cmake-build\garglk\gargoyle.exe gargoyle-staging
          cp cmake-build\garglk\*.dll gargoyle-staging
          cp cmake-build\*.ttf gargoyle-staging
          cp cmake-build\*.otf gargoyle-staging
          cp cmake-build\terps\*.exe gargoyle-staging
          cp cmake-build\terps\tads\tadsr.exe gargoyle-staging
      
      - name: Deploy Qt files
        run: |
          cd gargoyle-staging
          windeployqt --no-quick-import --no-compiler-runtime garglk.dll
      
      - name: Compress
        run: Compress-Archive -Path gargoyle-staging -DestinationPath gargoyle-win-clang-${{ matrix.arch }}.zip

      - name: Upload archive
        uses: actions/upload-artifact@v3
        with:
          name: gargoyle-win-clang-${{ matrix.arch }}.zip
          path: gargoyle-*.zip

